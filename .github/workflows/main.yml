name: Test and release
on:
  pull_request:
  push:
jobs:
  test:
    name: Test
    strategy:
      matrix:
        go-version:
        - 1.14.x
        os:
        - macos-latest
        - ubuntu-latest
        #- windows-latest # FIXME
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout
      uses: actions/checkout@v1
    - name: Generate
      if: matrix.os == 'ubuntu-latest'
      run: |
        go generate ./...
        git diff --exit-code
    - name: Build
      run: go build ./...
    - name: Run
      run: go run . --version
    - name: Test
      run: go test -race ./...
    - name: Lint
      if: matrix.os == 'ubuntu-latest'
      run: make lint
    - name: Check formatting
      if: matrix.os == 'ubuntu-latest'
      run: |
        make format
        git diff --exit-code
    - name: Install snapcraft
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "::add-path::/snap/bin"
        sudo chown root:root /
        sudo snap install snapcraft --classic
    - name: Release
      if: matrix.os == 'ubuntu-latest'
      uses: goreleaser/goreleaser-action@v1
      with:
        version: latest
        args: release --skip-publish --snapshot
    - name: Test release
      if: matrix.os == 'ubuntu-latest'
      run: |
        # verify that version information is embedded correctly
        ./dist/chezmoi-cgo_linux_amd64/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v"
        ./dist/chezmoi-cgo_linux_amd64/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v"
        ./dist/chezmoi-nocgo_linux_386/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v"
        ./dist/chezmoi-nocgo-snap_linux_386/chezmoi --version | tee /dev/stderr | grep -q "chezmoi version v"
  release:
    name: Release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs:
    - test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.14.x
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set up Snapcraft
      env:
        SNAPCRAFT_LOGIN: ${{ secrets.SNAPCRAFT_LOGIN }}
      run: |
        echo "::add-path::/snap/bin"
        sudo snap install snapcraft --classic
        sudo chown root:root /
        echo ${SNAPCRAFT_LOGIN} | snapcraft login --with -
    - name: Release
      uses: goreleaser/goreleaser-action@v1
      with:
        version: latest
        args: release
      env:
        GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
